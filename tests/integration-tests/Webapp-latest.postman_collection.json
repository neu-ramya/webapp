{
	"info": {
		"_postman_id": "02b5d53e-aab4-4f73-a445-50397b3290d4",
		"name": "Webapp-latest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24216985"
	},
	"item": [
		{
			"name": "Healthz",
			"item": [
				{
					"name": "GET request Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET method returns 200 OK\", function() {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/healthz",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"healthz"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Request with body Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET method with request body is 400 BAD REQUEST\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "some-key",
									"value": "asdf",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/healthz",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"healthz"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT request Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PUT method returns 405 Method Not Allowed\", function() {",
									"    pm.response.to.have.status(405)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/healthz",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"healthz"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Request Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST method returns 405 Method Not Allowed\", function() {",
									"    pm.response.to.have.status(405)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/healthz",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"healthz"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE request Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DELETE method returns 405 Method Not Allowed\", function() {",
									"    pm.response.to.have.status(405)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/healthz",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"healthz"
							]
						}
					},
					"response": []
				},
				{
					"name": "Different website Request Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET method returns 404 Not Found\", function() {",
									"    pm.response.to.have.status(404)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/health",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "assignments",
			"item": [
				{
					"name": "Post Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST method returns 201 success\", function() {",
									"    pm.response.to.have.status(201)",
									"})",
									"var jsonData = pm.response.json();",
									"console.log(jsonData.id);",
									"pm.environment.set(\"assignmentId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"testassignment34\",\n    \"points\" : \"53\",\n    \"num_of_attempts\" : \"4\",\n    \"deadline\": \"2020-10-29T09:00:00.001Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET request individual",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET method returns 200 OK\", function() {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/{{assignmentId}}",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								"{{assignmentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET method returns 200 OK\", function() {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET request with query params",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET method returns 400 Bad request\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments?asdfasdf=asdfasf",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments"
							],
							"query": [
								{
									"key": "asdfasdf",
									"value": "asdfasf"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Request with body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET method with request body is 400 BAD REQUEST\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"something\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Request unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET method with request body is 401 Unauthorized\", function() {",
									"    pm.response.to.have.status(401)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536uhfyt",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Request without auth header",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET method with request body is 401 Unauthorized\", function() {",
									"    pm.response.to.have.status(401)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Request without auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST method returns 401 Unauthorized\", function() {",
									"    pm.response.to.have.status(401)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"testassignment34\",\n    \"points\" : \"53\",\n    \"num_of_attempts\" : \"4\",\n    \"deadline\": \"2020-10-29T09:00:00.001Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Request invalid keys",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST method returns 400 Invalid keys\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"testassignment34\",\n    \"points\" : \"53\",\n    \"num_of_attempts\" : \"4\",\n    \"deadline\": \"2020-10-29T09:00:00.001Z\",\n    \"jhsakdjfghia\": \"usdgfugai\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Request missing valid key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST method returns 400 Missing keys\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"testassignment34\",\n    \"num_of_attempts\" : \"4\",\n    \"deadline\": \"2020-10-29T09:00:00.001Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT request without ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PUT method returns 400 BAD request\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT request withoutBody",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PUT method returns 400 BAD request\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/{{assignmentId}}",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								"{{assignmentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT request success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PUT method returns 204 Updated - Return No Content\", function() {",
									"    pm.response.to.have.status(204)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"assignment087\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/{{assignmentId}}",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								"{{assignmentId}}"
							],
							"query": [
								{
									"key": "asdf",
									"value": "asdf",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT request Invalid Keys",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PUT method returns 400 Bad Request\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nameasf\" : \"ygefuwgefi\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/{{assignmentId}}",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								"{{assignmentId}}"
							],
							"query": [
								{
									"key": "asdf",
									"value": "asdf",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT request Integer name values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PUT method returns 400 Bad Request\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": 12\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/{{assignmentId}}",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								"{{assignmentId}}"
							],
							"query": [
								{
									"key": "asdf",
									"value": "asdf",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT request forbidden",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PUT method returns 403 forbidden\", function() {",
									"    pm.response.to.have.status(403)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "njf5jf",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sara.ray@example.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/{{assignmentId}}",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								"{{assignmentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE request with body Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DELETE method returns 400 Bad request\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"testassignment34\",\n    \"points\" : \"53\",\n    \"num_of_attempts\" : \"4\",\n    \"deadline\": \"2020-10-29T09:00:00.001Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/{{assignmentId}}",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								"{{assignmentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE request without id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DELETE method returns 400 Bad Request\", function() {",
									"    pm.response.to.have.status(400)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE request with invalid id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DELETE method returns 404 not found\", function() {",
									"    pm.response.to.have.status(404)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "nf536u",
									"type": "string"
								},
								{
									"key": "username",
									"value": "mary.pop@example.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/asdfasfdasf",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								"asdfasfdasf"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE request forbidden Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DELETE method returns 403 Forbidden\", function() {",
									"    pm.response.to.have.status(403)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "njf5jf",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sara.ray@example.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{droplet_ip}}:3000/assignments/{{assignmentId}}",
							"host": [
								"{{droplet_ip}}"
							],
							"port": "3000",
							"path": [
								"assignments",
								"{{assignmentId}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "droplet_ip",
			"value": "localhost",
			"type": "string"
		}
	]
}