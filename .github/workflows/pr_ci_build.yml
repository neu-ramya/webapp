name: pr-ci-build
run-name: Build system for webapp during PR
on:
  pull_request_target:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  pr-ci-build:
    runs-on: ubuntu-latest
    env:
      DB_CONNECTION: mysql
      DB_HOST: localhost
      DB_PORT: 3306
      DB_DATABASE: assignment_2
      DB_USER: root
      DB_PASS: root
      PROF_TABLES: false
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      # - name: Fetch the merge commit
      #   run: git fetch origin "refs/pull/${{ github.event.pull_request.number}}/merge:refs/pull/${{ github.event.pull_request.number}}/merge"

      # - name: Check out the merge commit
      #   run: git checkout "refs/pull/${{ github.event.pull_request.number}}/merge"
        
      - name: create tmp env file
        run: |
          ls -al
          touch .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=assignment_2" >> .env
          echo "DB_USER=root" >> .env
          echo "DB_PASS=root" >> .env
          echo "PROF_TABLES=false" >> .env

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install

      - name: Setup mariadb action
        uses: ankane/setup-mariadb@v1
        with:
          database: assignment_2
      
      - name: Show database
        run: mysql -e 'SHOW DATABASES;'
        
      - name: set root user DB password
        run: mysql -D mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'root'";

      - name: flush privileges
        run: mysql -D mysql -e "flush privileges";

      # - name: install mariaDB
      #   run: |
      #     sudo apt update
      #     sudo apt install mariadb-server
      #     sudo systemctl status mariadb

      # - name: Start MariaDB service
      #   run: |
      #     sudo systemctl start mariadb
      #     sudo systemctl enable mariadb

      # - name: Create Database
      #   run: |
      #     sudo mysql -e 'SHOW DATABASES;' -uroot
      #     sudo mysql -uroot -e "CREATE DATABASE assignment_2;"

      # - name: Set up MySQL
      #   run: |
      #     sudo systemctl start mysql
      #     mysql -e 'CREATE DATABASE assignment_2;' -uroot -proot
      #     mysql -e 'SHOW DATABASES;' -uroot -proot

      - name: Start Express.js Server
        run: |
          npm run ci

      - uses: matt-ball/newman-action@master
        with:
          collection: tests/integration-tests/CSYE-webapp.postman_collection.json
